// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  email       String  @unique
  username    String  @unique
  displayName String? @default("")
  password    String
  admin       Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  characters Character[]

  @@map("users")
}

model Character {
  id          String @id @default(uuid())
  name        String
  background  String
  lifePoints  Int?   @default(3)
  magicPoints Int?   @default(3)

  strength     Int
  dexterity    Int
  intelligence Int
  willing      Int
  charisma     Int

  sword      Int? @default(0)
  bow        Int? @default(0)
  magic      Int? @default(0)
  stealth    Int? @default(0)
  persuasion Int? @default(0)
  athletics  Int? @default(0)
  shield     Int? @default(0)
  medicine   Int? @default(0)
  art        Int? @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user            User              @relation(fields: [userId], references: [id])
  userId          String
  Songs           Song[]
  Skill           Skill?            @relation(fields: [skillId], references: [id])
  skillId         String?
  ItemOnCharacter ItemOnCharacter[]

  @@map("characters")
}

model Item {
  id          String @id @default(uuid())
  name        String
  description String
  type        String
  damage      Int?

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ItemOnCharacter ItemOnCharacter[]

  @@map("items")
}

model ItemOnCharacter {
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  item        Item      @relation(fields: [itemId], references: [id])
  itemId      String

  @@id([characterId, itemId])
}

model Song {
  id          String @id @default(uuid())
  name        String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  character   Character @relation(fields: [characterId], references: [id])
  characterId String

  @@map("songs")
}

model Skill {
  id          String @id @default(uuid())
  name        String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  characters Character[]

  @@map("skills")
}
